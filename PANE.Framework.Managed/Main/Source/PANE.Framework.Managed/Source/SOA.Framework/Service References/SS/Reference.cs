//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SOA.Framework.SS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="SS.SessionService")]
    public interface SessionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SessionService/isUserLoggedin", ReplyAction="urn:SessionService/isUserLoggedinResponse")]
        bool isUserLoggedin(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:SessionService/IsADifferentInstitution", ReplyAction="urn:SessionService/IsADifferentInstitutionResponse")]
        bool IsADifferentInstitution(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface SessionServiceChannel : SOA.Framework.SS.SessionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SessionServiceClient : System.ServiceModel.ClientBase<SOA.Framework.SS.SessionService>, SOA.Framework.SS.SessionService {
        
        public SessionServiceClient() {
        }
        
        public SessionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SessionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SessionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool isUserLoggedin(string username) {
            return base.Channel.isUserLoggedin(username);
        }
        
        public bool IsADifferentInstitution(string username) {
            return base.Channel.IsADifferentInstitution(username);
        }
    }
}
